name: .5-SAST-Check-Pull-Request-or-Branch1

# This workflow will checkout the code, build the DotNet app, create an artifact from the BIN folder, and scan with the Veracode Static Pipeline Scanner.
# For best scan results, we are using a Windows-2022 image to build the .Net code.

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
 # push:
 #   branches: [ main, release/* ]
 # pull_request:
 #   branches: [ main, develop, main, release/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  SAST-Check-Pull-Request-or-Branch:
    runs-on: windows-2022
    steps:

# Checkout code
    - uses: actions/checkout@v3

# Setup the .Net environment    
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v2
#      with:
#        dotnet-version: 6.0.x

# Build the .Net application    
    - name: Build App
      run: dotnet publish app/app.csproj -o ./publish

# ZIP up the BIN folder where the Bytecode is located
    - name: Zip Application Files 
      uses: vimtor/action-zip@v1
      with:
        files: publish/
        dest: ./publish.zip

# Download Veracode Static Pipeline Scanner     
    - name: Download Veracode Static Pipeline Scanner
      run: |
        curl https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -o veracode.zip
        unzip -o veracode.zip
  
# In this configuration, the Pipeline scanner will check against the baseline file and see if there are any new flaws compared to the baseline.  If there is, it will break the build.  If not, the build will continue.  
    - name: Run Veracode Static Pipeline Scanner
      continue-on-error: false
      run: >
       java -jar pipeline-scan.jar --veracode_api_id "${{ secrets.VERACODE_API_ID }}" --veracode_api_key "${{ secrets.VERACODE_API_KEY }}" --file publish.zip --summary_output true --project_name VeraDemo-DotNetCore
#       java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" |
#       --file publish.zip
#       --summary_output true
#       --project_name VeraDemo-DotNetCore
  

# Artifact the results for later use
    - name: Archive Results.json & Results.txt from Veracode Static Pipeline Scanner
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: Pipeline Scanner Results
        path: results.*
